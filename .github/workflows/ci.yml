---
name: CI
on:
  push:
    branches: [dev, test, main]
    tags: ['*']
  pull_request:
    branches: [dev, test, main]
jobs:
  test:
    name: Build and Push to GHCR
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        node-version: [12.x]
    steps:
      - 
        name: Check out the repo
        uses: actions/checkout@v2
      - 
        name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - 
        name: install dependencies
        run: npm install
        working-directory: server

      - 
        name: run server tests
        run: npm run test
        working-directory: server
          
  push_to_registry:
    name: Build and Push to GHCR
    runs-on: ubuntu-20.04
    if: github.event_name != 'pull_request'
    steps:
      - 
        name: Check out the repo
        uses: actions/checkout@v2
      - 
        name: Prepare
        id: prep
        run: |
          DOCKER_IMAGE=ghcr.io/${{ github.repository }}
          VERSION=${GITHUB_REF#refs/heads/}
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/v}
          fi
          TAGS="${DOCKER_IMAGE}:${VERSION}"
          if [[ $VERSION =~ ^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$ ]]; then
            TAGS="$TAGS,${DOCKER_IMAGE}:latest"
          fi
          echo ::set-output name=tags::${TAGS}
      -
        name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GHCR_PAT }}
      - 
        name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - 
        name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.prep.outputs.tags }}
