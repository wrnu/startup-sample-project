name: Pull Request

on:
  pull_request:
    paths:
      - ".github/workflows/**"
      - "client/**"
      - "server/**"
      - "terraform/**"
      - "Dockerfile"
      - "!**/README.md"

env:
  IMAGE_ID: ssp

  TF_VERSION: 0.13.5
  TG_VERSION: 0.26.7
  TG_SRC_PATH: terraform
  TFC_WORKSPACE: dev

jobs:
  pr:
    name: pr
    runs-on: ubuntu-20.04

    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

      - uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Test
        uses: docker/build-push-action@v2
        with:
          builder: ${{ steps.buildx.outputs.name }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          context: .
          file: ./Dockerfile
          target: test

      - name: Build
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          builder: ${{ steps.buildx.outputs.name }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          context: .
          file: ./Dockerfile
          target: runtime
          push: false

  tf_plan:
    name: pr
    runs-on: ubuntu-20.04
    if: github.base_ref == 'refs/head/master'

    steps:
      - uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: ${{ env.TF_VERSION }}
          cli_config_credentials_token: ${{ secrets.TFC_TEAM_TOKEN }}

      - uses: peter-murray/terragrunt-github-action@v1.0.0
        with:
          terragrunt_version: ${{ env.TG_VERSION }}

      - name: Terragrunt Plan
        id: tg_plan
        working-directory: ${{ env.TG_SRC_PATH }}/${{ env.TFC_WORKSPACE }}
        env:
          TF_CLI_ARGS: -no-color
          client_app_image: ${{ env.IMAGE_ID }}:${{ github.sha }}
        run: terragrunt plan-all --terragrunt-non-interactive | tee /tmp/tg_plan
        continue-on-error: true

      - name: Get Terraform Plan Output
        id: plan
        uses: juliangruber/read-file-action@v1
        with:
          path: /tmp/tg_plan

      - name: Update Pull Request
        uses: actions/github-script@v3
        env:
          SUCCESS: '\u2705'
          FAILURE: '\u274C'
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const plan =  `${{ steps.plan.outcome }}` == 'success' ? `${{ env.SUCCESS }}` : `${{ env.FAILURE }}`;
            const output = `#### Terraform Plan: ${plan}

            <details>
            <summary>Show</summary>

            \`\`\`terraform
            ${{ steps.plan.outputs.content }}
            \`\`\`

            </details>

            *Pusher:* @${{ github.actor }}, *Action:* [${process.env.GITHUB_WORKFLOW}: #${process.env.GITHUB_RUN_NUMBER}](https://github.com/${process.env.GITHUB_REPOSITORY}/actions/runs/${process.env.GITHUB_RUN_ID})`;
              
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })

      - name: Terragrunt Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1
